server.port=8502
spring.application.name=config-client

eureka.client.service-url.defaultZone=http://admin:admin@localhost:8000/eureka

<<<<<<< HEAD
##获取配置文件的名称
#spring.cloud.config.name=application
##获取配置文件的策略
#spring.cloud.config.profile=dev
##label: dev # 获取配置文件的分支默认为master，由于是本地获取 label无效 则注释了
##spring.cloud.config.label=dev
## 开启配置服务发现，表示从eureka注册中心发现服务 (service-id)
#spring.cloud.config.discovery.enable=true
##指定配置中心的service-id 也就是服务名
#spring.cloud.config.didcovery.service-id=config-server
=======
#获取配置文件的名称
spring.cloud.config.name=application
#获取配置文件的策略
spring.cloud.config.profile=dev
#label: dev # 获取配置文件的分支默认为master，由于是本地获取 label无效 则注释了
#spring.cloud.config.label=dev
# 开启配置服务发现，表示从eureka注册中心发现服务 (service-id)
spring.cloud.config.discovery.enable=true
#指定配置中心的service-id 也就是服务名
spring.cloud.config.didcovery.service-id=config-server
>>>>>>> e4abaa59b663f3f3a764bda91816453ef8bca3b3


#spring.profiles.active=dev
##配置中心地址
#spring.cloud.config.name=application
#spring.cloud.config.uri=http://localhost:8601
#spring.cloud.config.fail-fast=true
<<<<<<< HEAD
#
#
#server.context-path=/
#server.port=8080
=======

>>>>>>> e4abaa59b663f3f3a764bda91816453ef8bca3b3

# default true
management.security.enabled=false
endpoints.restart.enabled=true
<<<<<<< HEAD
spring.cloud.config.env=dev
spring.cloud.config.profile=dev
spring.cloud.config.uri=-http://localhost:8601
=======
#spring.application.name=config-client
spring.cloud.config.env=dev
spring.cloud.config.uri=http://localhost:8501

>>>>>>> e4abaa59b663f3f3a764bda91816453ef8bca3b3
